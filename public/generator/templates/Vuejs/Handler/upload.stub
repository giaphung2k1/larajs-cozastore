{{$NAME$}}DropzoneS(file, response) {
      if (!Array.isArray(this.form.{{$FIELD$}})) {
        this.form.{{$FIELD$}} = JSON.parse(this.form.{{$FIELD$}});
      }
      if (!this.form.{{$FIELD$}}) {
        this.form.{{$FIELD$}} = [];
      }
      this.form.{{$FIELD$}}.push(response.data);
      this.{{$NAME$}}Temp.push(file);
      this.$message({ message: this.$t('messages.upload'), type: 'success' });
    }, // Upload file => Dropzone
    {{$NAME$}}DropzoneR(file) {
      const index = file.upload && this.{{$NAME$}}Temp.findIndex(value => value.upload.uuid === file.upload.uuid)
      if (typeof index !== 'undefined') {
        this.{{$NAME$}}Temp.splice(index, 1);
        removeFile(this.form.{{$FIELD$}}[index]).then(res => {
          this.form.{{$FIELD$}}.splice(index, 1);
          this.$message({ message: res.data.message, type: 'success' });
        }).catch(err => {
          console.log(err);
        });
      } else {
        if (!Array.isArray(this.form.{{$FIELD$}})) {
          this.form.{{$FIELD$}} = JSON.parse(this.form.{{$FIELD$}});
        }
        const index = this.form.{{$FIELD$}}.indexOf(file.nameRemove);
        removeFile(file.nameRemove).then(res => {
          this.form.{{$FIELD$}}.splice(index, 1);
          this.$message({ message: res.data.message, type: 'success' });
        }).catch(err => {
          console.log(err);
        });
      }
	  }, // Remove file => Dropzone